apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.firebase.crashlytics'
apply from: '../ktlint.gradle'

android {
    signingConfigs {
        debug {
            storeFile file(new File(getRootDir(), PROTEGO_KEYSTORE_DEBUG_FILE))
            storePassword PROTEGO_KEYSTORE_DEBUG_PASSWORD
            keyPassword PROTEGO_KEYSTORE_DEBUG_PASSWORD
            keyAlias = PROTEGO_KEYSTORE_DEBUG_ALIAS
        }
    }
    dataBinding {
        enabled = true
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "pl.gov.mc.protegosafe"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 39
        versionName "4.2.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "boolean", "ENABLE_WEBVIEW_LOGS", "false"
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    kotlinOptions { jvmTarget = "1.8" }

    buildTypes {
        debug {
            versionNameSuffix ".debug"
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "ENABLE_WEBVIEW_LOGS", "false"
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "mode"
    productFlavors {
        dev {
            dimension "mode"
            applicationIdSuffix ".dev"
            versionNameSuffix '-DEV'
            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
        }
        stage {
            dimension "mode"
            applicationIdSuffix ".stage"
            versionNameSuffix '-STAGE'
            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
        }
        prod {
            dimension "mode"
            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.jetbrains.kotlin_stdlib

    // Multidex
    implementation deps.androidx.multidex

    // Appcompat
    implementation deps.androidx.appcompat_appcompat
    implementation deps.androidx.core_ktx
    implementation deps.androidx.constraintlayout

    //livedata extensions
    implementation deps.livedataextensions.livedataextensions

    // Navigation
    implementation deps.androidx.navigation_fragment_ktx
    implementation deps.androidx.navigation_ui_ktx

    // ViewModel
    implementation deps.androidx.viewmodel_ktx
    // LiveData
    implementation deps.androidx.livedata_ktx
    // Saved state module for ViewModel
    implementation deps.androidx.viewmodel_savedstate
    // Annotation processor
    implementation deps.androidx.legacy
    kapt deps.androidx.lifecycle_compiler
    // RxWorker
    implementation deps.androidx.work_rxjava2

    // Material
    implementation deps.google.material
    implementation deps.androidx.constraintlayout
    //rx
    implementation deps.rx.rxjava
    implementation deps.rx.rxkotlin
    implementation deps.rx.rxandroid

    //Koin
    implementation deps.koin.android
    testImplementation deps.koin.test

    //Timber
    implementation deps.timber.timber

    //ThreeTenABP
    implementation deps.time.threetenabp

    //Firebase
    implementation deps.google.firebase_messaging
    implementation deps.google.firebase_crashlytics

    testImplementation deps.tests.junit
    androidTestImplementation deps.tests.junit_androidx_ext
    androidTestImplementation deps.tests.espresso

    implementation deps.facebook.stetho
    implementation deps.google.gson

    //permissions
    implementation deps.permissions.easypermissions

    implementation deps.google.play_core
    implementation deps.google.play_core_ktx

    //Hyperion debug tool
    debugImplementation deps.hyperion.core
    debugImplementation deps.hyperion.attr
    debugImplementation deps.hyperion.build_config
    debugImplementation deps.hyperion.crash
    debugImplementation deps.hyperion.disk
    debugImplementation deps.hyperion.geiger_counter
    debugImplementation deps.hyperion.measurement
    debugImplementation deps.hyperion.phoenix
    debugImplementation deps.hyperion.recorder
    debugImplementation deps.hyperion.shared_preferences
    debugImplementation deps.hyperion.timber
    debugImplementation deps.hyperion.simple_item

    implementation project(path: ':data')
    implementation project(path: ":domain")
    implementation project(path: ":device")
}